.Dd February 19, 2019
.Dt SEMVER 1
.Os
.Sh NAME
.Nm semver
.Nd Semantic Versioning utility
.Sh SYNOPSIS
.Nm
get
.Op Fl -major | Fl -minor | Fl -patch | Fl -prerelease | Fl -build
.Ar version
.Nm
grep
.Fl
.Nm
validate
.Ar string
.Nm
.Op Fl h
.Sh DESCRIPTION
The
.Nm
utility parses and validates Semantic Version strings.
.Ss get
.Nm
can get the components of a
.Ar version
string, and print them in tab-separated format to STDOUT. The output is suitable for post-processing by standard *nix tools like 'cut'.
.Pp
The format looks like this:
.Pp
.Dl $ semver get MAJOR.MINOR.PATCH
.Dl MAJOR\tMINOR\tPATCH
.Pp
.Dl $ semver get MAJOR.MINOR.PATCH-PRERELEASE
.Dl MAJOR\tMINOR\tPATCH\tPRERELEASE
.Pp
.Dl $ semver get MAJOR.MINOR.PATCH+BUILD
.Dl MAJOR\tMINOR\tPATCH\t\tBUILD
.Pp
.Dl $ semver get MAJOR.MINOR.PATCH-PRERELEASE+BUILD
.Dl MAJOR\tMINOR\tPATCH\tPRERELEASE\tBUILD
.Pp
The get subcommand understands the following (mutually exclusive) options:
.Bl -tag -width indent
.It Fl -major
Get only the MAJOR component of
.Ar version
.It Fl -minor
Get only the MINOR component of
.Ar version
.It Fl -patch
Get only the PATCH component of
.Ar version
.It Fl -prerelease
Get only the PRERELEASE component of
.Ar version
.It Fl -build
Get only the BUILD component of
.Ar version
.El
.Pp
The operation will fail:
.Bl -bullet -compact
.It
If more than one mutually exclusive option is given.
.It
If
.Ar version
does not contain the specified component.
.It
If
.Ar version
is invalid.
.El
.Ss grep
.Nm
can parse text from STDIN to extract zero or more Semantic Version strings. It will tolerate quite noisy input.
.Pp
A candidate version
.Sq string
will be matched within the text stream if it meets the following criteria:
.Bl -bullet -compact
.It
.Sq string
is a valid Semantic Version.
.It
.Sq string
is a whole word.
.It
.Sq string
has whitespace immediately before it, OR its first character is also the first character of the line.
.It
.Sq string
has whitespace immediately after it, OR its last character is also the last character of the line.
.El
.Ss validate
.Nm
can check if an input
.Ar string
is a valid Semantic Version.
.Pp
It will return the result using an exit code. The exit codes are:
.Bl -tag 
.It 0
.Ar string
is a valid Semantic Version.
.It 1
.Ar string
is not a valid Semantic Version.
.El
.Sh OPTIONS
.Pp
The
.Nm
utility understands the following command-line options:
.Bl -tag -width indent
.It Fl h, Fl -help
Display the usage screen.
.El
.Sh EXAMPLES
.Ss Get
.Pp
To get components of the version string
.Sq 1.2.3-SNAPSHOT+2019
:
.Pp
.Dl $ semver get '1.2.3-SNAPSHOT+2019'
.Dl 1\t2\t3\tSNAPSHOT\t2019
.Pp
.Dl $ semver get '1.2.3-SNAPSHOT+2019' | cut -f 1-3
.Dl 1\t2\t3
.Pp
.Dl $ semver get --major '1.2.3-SNAPSHOT+2019'
.Dl 1
.Pp
.Dl $ semver get --minor '1.2.3-SNAPSHOT+2019'
.Dl 2
.Pp
.Dl $ semver get --patch '1.2.3-SNAPSHOT+2019'
.Dl 3
.Pp
.Dl $ semver get --prerelease '1.2.3-SNAPSHOT+2019'
.Dl SNAPSHOT
.Pp
.Dl $ semver get --build '1.2.3-SNAPSHOT+2019'
.Dl 2019
.Ss Validate
.Pp
To validate the (valid) version string
.Sq 1.2.3
:
.Pp
.Dl $ semver validate '1.2.3'
.Dl $ echo $?
.Dl 0
.Pp
To validate the (invalid) version string
.Sq v1.0
:
.Pp
.Dl $ semver validate 'v1.0'
.Dl $ echo $?
.Dl 1
.Sh EXIT STATUS
.Ex -std
.Sh STANDARDS
The
.Nm
utility is expected to conform to the Semantic Versioning standard, defined at https://semver.org.
