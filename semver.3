.Dd February 19, 2019
.Dt SEMVER 3
.Os
.Sh NAME
.Nm imajor
.Nm iminor
.Nm ipatch
.Nd Semantic Versioning awk functions
.Sh LIBRARY
Semver (semver.awk)
.Sh SYNOPSIS
\fB@include "semver.awk"\fP
\n
.Ft version
.Fn imajor "version"
.Ft version
.Fn iminor "version"
.Ft version
.Fn ipatch "version"
.Sh DESCRIPTION
The
.Fn semver
family of awk functions can parse and increment components of a Semantic Version string.
.Pp
The formula to increment the MAJOR component of
.Ar version
is:
.Dl MAJOR.MINOR.PATCH[-PRERELEASE][+BUILD] -> (MAJOR + 1).0.0
.Pp
The formula to increment the MINOR component of
.Ar version
is:
.Dl MAJOR.MINOR.PATCH[-PRERELEASE][+BUILD] -> MAJOR.(MINOR + 1).0
.Pp
The formula to increment the PATCH component of
.Ar version
is:
.Dl MAJOR.MINOR.PATCH[-PRERELEASE][+BUILD] -> MAJOR.MINOR.(PATCH + 1)
.Pp
The PRERELEASE and BUILD components will be reset when an increment occurs.
.Sh EXAMPLES
To increment the major version:
.Bd -literal -offset indent
@include "semver.awk"
{
    print imajor("1.2.3"); # => "2.0.0"
}
.Ed
.Dl
.Pp
To increment the minor version:
.Bd -literal -offset indent
@include "semver.awk"
{
    print iminor("1.2.3"); # => "1.3.0"
}
.Ed
.Pp
To increment the patch version:
.Bd -literal -offset indent
@include "semver.awk"
{
    print ipatch("1.2.3"); # => "1.2.4"
}
.Ed
.Sh EXIT STATUS
The
.Fn semver
awk functions exit 0 on success, and >0 if an error occurs.
.Sh SEE ALSO
.Xr semver 1
.Sh STANDARDS
The
.Fn semver
awk functions are expected to conform to the Semantic Versioning standard, defined at https://semver.org.
