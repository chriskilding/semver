.Dd February 19, 2019
.Dt SEMVER 1
.Os
.Sh NAME
.Nm semver-sort
.Nd Semantic Versioning utility
.Sh SYNOPSIS
.Nm
.Op options
.Sh DESCRIPTION
The
.Nm
utility sorts a list of line-delimited Semantic Version strings from STDIN in precedence order (low-to-high).
.Pp
The operation will fail if the input is invalid (i.e. it contains anything besides Semantic Versions and line delimiter characters).
.Pp
Note: Some aspects of Semantic Version ordering are undefined in the specification. The
.Nm
utility makes implementation-specific choices to stabilise ordering across executions. Please see the WARNINGS section for details.
.Sh OPTIONS
.Pp
The
.Nm
utility understands the following command-line options:
.Bl -tag -width indent
.It Fl h, Fl -help
Display the usage screen.
.It Fl r, Fl -reverse
Sort in reverse order (high-to-low).
.El
.Sh EXAMPLES
Given a line-separated list of version strings:
.Pp
.Dl $ semver sort <<EOF
.Dl 2.2.2
.Dl 1.1.1
.Dl 4.4.4
.Dl EOF
.Pp
The result will be:
.Pp
.Dl 1.1.1
.Dl 2.2.2
.Dl 4.4.4
.Sh EXIT STATUS
.Ex -std
.Sh WARNINGS
The Semantic Versioning standard does not define an ordering for two versions that are precedence-equal but stringwise-unequal (for example the BUILD is different). To guarantee predictable ordering between executions, the
.Nm
utility applies an additional natural sort on top of the Semantic Version precedence sort. This additional sort is IMPLEMENTATION-SPECIFIC and SUBJECT TO CHANGE between releases, so its algorithm is deliberately left undocumented. You should not rely on it.
.Sh STANDARDS
The
.Nm
utility is expected to conform to the Semantic Versioning standard, defined at https://semver.org.
